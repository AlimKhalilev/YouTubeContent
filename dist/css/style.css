/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type=checkbox],
[type=radio] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type=search] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}

/* My new styles for any 16.03.2020 Formys */
p, h1, h2, h3, h4, h5, h6 {
  margin: 0;
}

*, ::after, ::before {
  box-sizing: border-box;
}

ul {
  padding: 0;
  margin: 0;
  list-style-type: none;
}

:root {
  --lightblue: #EAF1FE;
  --regular-black: #373943;
  --accent-black: #24252E;
  --accent-blue: #3E54D8;
  --accent-green: #199F27;
  --accent-red: #ED6373;
  --accent-yellow: #F3B63F;
  --stroke-accent: #D3E3FF;
  --color-white: #FFFFFF;
  --low-priority-text: #929398;
  --accent-blue-darken: #1B2D9D;
}

.section__inner {
  margin: 0 auto;
  max-width: 1380px;
}
@media (max-width: 1420px) {
  .section__inner {
    max-width: 1080px;
  }
}
@media (max-width: 1120px) {
  .section__inner {
    width: 90%;
  }
}
@media (max-width: 820px) {
  .section__inner {
    width: 90%;
  }
}

@font-face {
  font-family: Montserrat;
  font-display: swap;
  src: url("../fonts/Montserrat-Medium.woff2") format("woff2"), url("../fonts/Montserrat-Medium.woff") format("woff");
  font-weight: 500;
  font-style: normal;
}
@font-face {
  font-family: Montserrat;
  font-display: swap;
  src: url("../fonts/Montserrat-Bold.woff2") format("woff2"), url("../fonts/Montserrat-Bold.woff") format("woff");
  font-weight: 700;
  font-style: normal;
}
:root {
  --section_indent: 3rem;
  --header-min-height: 5rem;
}
@media (max-width: 1120px) {
  :root {
    --section_indent: 2rem;
  }
}

html, body {
  font-family: "Montserrat", sans-serif;
  line-height: 1.5;
  background-color: var(--lightblue);
  font-size: 16px;
  display: flex;
  flex-direction: column;
  height: 100vh;
}
html.hideScroll, body.hideScroll {
  overflow-y: hidden;
}

.overlay {
  position: fixed;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background-color: #000;
  opacity: 0;
  visibility: hidden;
  transition: 0.3s ease-in-out;
}
.overlay--burger {
  z-index: 10;
}
.overlay--modal {
  z-index: 20;
}
.overlay.visible {
  visibility: visible;
  opacity: 0.8;
}

.visually-hidden {
  position: absolute;
  clip: rect(0 0 0 0);
  width: 1px;
  height: 1px;
  margin: -1px;
}

.scroll-block-dummy {
  position: absolute;
  top: -9999px;
  width: 50px;
  height: 50px;
  overflow: scroll;
  visibility: hidden;
}

.section {
  margin-top: var(--section_indent);
}
.section__header {
  margin-bottom: 1.2rem;
}
.section__title {
  font-size: 1.5rem;
}
.section--footer {
  margin-top: auto;
}
.section--underHeader {
  margin-top: calc(var(--section_indent) + var(--header-min-height));
}
.section--beforeFooter {
  margin-bottom: var(--section_indent);
}

.blockTitle {
  font-size: 2.2rem;
  text-align: center;
}
@media (max-width: 820px) {
  .blockTitle {
    font-size: 1.8rem;
  }
}

.imgMax {
  max-width: 100%;
}

#easterEgg {
  --color: #00a0ff;
  text-align: center;
  font-size: 7rem;
  line-height: 1.6;
  background-color: transparent;
  box-shadow: unset;
  padding: 0;
  color: var(--white);
  width: unset;
  text-shadow: 0 0 7px var(--white), 0 0 10px var(--white), 0 0 21px var(--white), 0 0 42px var(--color), 0 0 82px var(--color), 0 0 92px var(--color), 0 0 102px var(--color), 0 0 151px var(--color);
}
@media (max-width: 820px) {
  #easterEgg {
    font-size: 4rem;
  }
}
#easterEgg.visible ~ .overlay.visible {
  opacity: 0.99;
}

.customScroll::-webkit-scrollbar-track {
  background-color: #b3b3b3;
}
.customScroll::-webkit-scrollbar {
  width: 4px;
  background-color: #b3b3b3;
}
.customScroll::-webkit-scrollbar-thumb {
  background-color: #676767;
}

.btn {
  background: var(--color-white);
  border: 1px solid var(--stroke-accent);
  border-radius: 8px;
  cursor: pointer;
  padding: 29px 55px;
  transition: 0.3s ease-in-out;
  color: var(--accent-blue);
}
.btn:hover {
  background: var(--accent-blue-darken);
  border-color: var(--accent-blue-darken);
  box-shadow: 0px 21px 22px -13px rgba(62, 84, 216, 0.51);
  color: var(--color-white);
}
.btn__text {
  color: inherit;
  font-weight: 600;
  font-size: 18px;
  line-height: 22px;
}

.card {
  position: relative;
  overflow: hidden;
  background-color: var(--color-white);
  border: 1px solid var(--stroke-accent);
  border-radius: 15px;
  cursor: pointer;
  transition: 0.3s ease-in-out;
}
.card:hover {
  box-shadow: 0px 18px 16px -13px rgba(62, 84, 216, 0.22);
  transform: translateY(-10px);
}
.card:hover .card__circle {
  width: 276px;
  height: 276px;
}
.card__circle {
  position: absolute;
  width: 148px;
  height: 148px;
  border-radius: 50%;
  background-color: var(--accent-blue);
  top: 0;
  right: 0;
  transform: translate(50%, -50%);
  transition: 0.3s ease-in-out;
}
.card__circle--green {
  background-color: var(--accent-green);
}
.card__circle--red {
  background-color: var(--accent-red);
}
.card__circle--yellow {
  background-color: var(--accent-yellow);
}
.card__container {
  padding: 24px;
}
.card__header {
  margin-bottom: 40px;
}
.card__title {
  font-weight: 600;
  font-size: 24px;
  line-height: 1.5;
  color: var(--accent-black);
}
.card__subscribe {
  margin-top: 24px;
}
.card__cost {
  font-weight: 700;
  font-size: 32px;
  line-height: 1.5;
  color: var(--accent-blue);
  margin-right: 8px;
}
.card__time {
  font-weight: 500;
  font-size: 16px;
  line-height: 1.6;
  color: var(--low-priority-text);
}
.card__btn {
  margin-top: 40px;
}

.components__container {
  max-width: 1170px;
  margin: 0 auto;
}
.rate__container {
  max-width: 1170px;
  margin: 0 auto;
}
.rate__header {
  margin-bottom: 70px;
}
.rate__title {
  font-weight: 700;
  font-size: 64px;
  line-height: 1.25;
  color: var(--regular-black);
  margin-bottom: 50px;
  text-align: center;
}
.rate__subtitle {
  font-size: 20px;
  line-height: 1.5;
  color: var(--accent-black);
  max-width: 720px;
  margin: 0 auto;
  text-align: center;
}
.rate__accentText {
  font-weight: 600px;
}
.rate__cards {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 24px;
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */